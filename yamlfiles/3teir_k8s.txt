
# Define the deployment for the Tomcat application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - name: tomcat
        image: shan20000/k8s_3teir:tomcat
        ports:
        - containerPort: 8080
        env:
        - name: MYSQL_HOST
          value: mysql-service
        - name: MYSQL_PORT
          value: "3306"
        # Add any other environment variables your Tomcat application needs
---
# Define the deployment for the MySQL database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: shan20000/k8s_3teir:mysql
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "4321"
        # Add any other environment variables or volume mounts needed for MySQL data persistence
---
# Define the deployment for the proxy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy
  template:
    metadata:
      labels:
        app: proxy
    spec:
      containers:
      - name: proxy
        image: shan20000/k8s_3teir:proxy
        ports:
        - containerPort: 80
---
# Define a service to expose MySQL within the Kubernetes cluster
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
# Define a service to expose Tomcat application
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service
spec:
  selector:
    app: tomcat
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
---
# Define a service to expose the proxy
apiVersion: v1
kind: Service
metadata:
  name: proxy-service
spec:
  selector:
    app: proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer




[root@ip-172-31-8-41 ec2-user]# cat nginx.conf 
user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
events {
worker_connections 1024;
}
http {
include /etc/nginx/mime.types;
default_type application/octet-stream;
log_format main '$remote_addr - $remote_user [$time_local] "$request" '
'$status $body_bytes_sent "$http_referer" '
'"$http_user_agent" "$http_x_forwarded_for"';
access_log /var/log/nginx/access.log main;
sendfile on;
tcp_nopush on;
tcp_nodelay on;
keepalive_timeout 65;
types_hash_max_size 2048;
include /etc/nginx/conf.d/*.conf;
server {
listen 80;
server_name localhost;
location / {
proxy_pass http://tomcat-service/student/;
}
}
}

[root@ip-172-31-8-41 ec2-user]# cat dockerfile 
FROM nginx:latest
COPY nginx.conf /etc/nginx/nginx.conf
RUN rm /etc/nginx/conf.d/default.conf
EXPOSE 80




