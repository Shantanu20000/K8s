apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - name: tomcat
        image: shan20000/k8s_3teir_project:frontend
        ports:
        - containerPort: 8080
        env:
        - name: MYSQL_HOST
          value: mysql-service
        - name: MYSQL_PORT
          value: "3306"
        # Add any other environment variables your Tomcat application needs
---
# Define the deployment for the MySQL database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: shan20000/k8s_3teir_project:backend
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "1234"
        # Add any other environment variables or volume mounts needed for MySQL data persistence
---
# Define the deployment for the proxy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy
  template:
    metadata:
      labels:
        app: proxy
    spec:
      containers:
      - name: proxy
        image: shan20000/k8s_3teir_project:proxy
        ports:
        - containerPort: 80
---
# Define a service to expose MySQL within the Kubernetes cluster
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
# Define a service to expose Tomcat application
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: tomcat
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
# Define a service to expose the proxy
apiVersion: v1
kind: Service
metadata:
  name: proxy-service
spec:
  selector:
    app: proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer





 
